#!/bin/bash
set -eo pipefail
set -x

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source /opt/resource/common.sh

# Read inputs
source=$1
payload=$(mktemp /tmp/resource-out.XXXXXX)
cat > "$payload" <&0

get_revision() {
  local release="$1"

  revision="$(helm history "$release" | grep -i "DEPLOYED" | awk '{ print $1 }')"
}

# Prepare
namespace=$(jq -r '.source.namespace // ""' < "$payload")
error_if_empty namespace

setup_resource "$payload" "$source"

# Parse parameters
chart_dir=$(jq -r '.params.chart_dir // ""' < "$payload")
release_name=$(jq -r '.params.release_name // ""' < "$payload")
error_if_empty chart_dir
error_if_empty release_name

# Deploy
chart="${source}/${chart_dir}"

info "Deploying helm release into kubernetes..."
helm upgrade --install --tiller-namespace="$namespace" $release_name $chart

get_revision "$release_name" || die "Getting revision"

# Payload
jq -n \
--arg revision "$revision" \
--arg chart_dir "$chart_dir" \
'{
  "version": {
    "revision": $revision
  },
  "metadata": [
    {
      "name": "chart_dir",
      "value": $chart_dir
    }
  ]
}' >&3
